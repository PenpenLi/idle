//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Coffee_UIExtensions_UITransitionEffectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Coffee.UIExtensions.UITransitionEffect), typeof(Coffee.UIExtensions.UIEffectBase));
		L.RegFunction("Show", Show);
		L.RegFunction("Hide", Hide);
		L.RegFunction("ModifyMaterial", ModifyMaterial);
		L.RegFunction("ModifyMesh", ModifyMesh);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("shaderName", get_shaderName, null);
		L.RegVar("effectFactor", get_effectFactor, set_effectFactor);
		L.RegVar("transitionTexture", get_transitionTexture, set_transitionTexture);
		L.RegVar("effectMode", get_effectMode, null);
		L.RegVar("keepAspectRatio", get_keepAspectRatio, set_keepAspectRatio);
		L.RegVar("ptex", get_ptex, null);
		L.RegVar("dissolveWidth", get_dissolveWidth, set_dissolveWidth);
		L.RegVar("dissolveSoftness", get_dissolveSoftness, set_dissolveSoftness);
		L.RegVar("dissolveColor", get_dissolveColor, set_dissolveColor);
		L.RegVar("duration", get_duration, set_duration);
		L.RegVar("passRayOnHidden", get_passRayOnHidden, set_passRayOnHidden);
		L.RegVar("updateMode", get_updateMode, set_updateMode);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Show(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)ToLua.CheckObject<Coffee.UIExtensions.UITransitionEffect>(L, 1);
				obj.Show();
				return 0;
			}
			else if (count == 2)
			{
				Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)ToLua.CheckObject<Coffee.UIExtensions.UITransitionEffect>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.Show(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Coffee.UIExtensions.UITransitionEffect.Show");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hide(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)ToLua.CheckObject<Coffee.UIExtensions.UITransitionEffect>(L, 1);
				obj.Hide();
				return 0;
			}
			else if (count == 2)
			{
				Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)ToLua.CheckObject<Coffee.UIExtensions.UITransitionEffect>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.Hide(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Coffee.UIExtensions.UITransitionEffect.Hide");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ModifyMaterial(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)ToLua.CheckObject<Coffee.UIExtensions.UITransitionEffect>(L, 1);
			obj.ModifyMaterial();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ModifyMesh(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<UnityEngine.UI.VertexHelper>(L, 2))
			{
				Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)ToLua.CheckObject<Coffee.UIExtensions.UITransitionEffect>(L, 1);
				UnityEngine.UI.VertexHelper arg0 = (UnityEngine.UI.VertexHelper)ToLua.ToObject(L, 2);
				obj.ModifyMesh(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.Mesh>(L, 2))
			{
				Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)ToLua.CheckObject<Coffee.UIExtensions.UITransitionEffect>(L, 1);
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 2);
				obj.ModifyMesh(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Coffee.UIExtensions.UITransitionEffect.ModifyMesh");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shaderName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Coffee.UIExtensions.UITransitionEffect.shaderName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectFactor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			float ret = obj.effectFactor;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index effectFactor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_transitionTexture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			UnityEngine.Texture ret = obj.transitionTexture;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index transitionTexture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			Coffee.UIExtensions.UITransitionEffect.EffectMode ret = obj.effectMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index effectMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_keepAspectRatio(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			bool ret = obj.keepAspectRatio;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index keepAspectRatio on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ptex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			Coffee.UIExtensions.ParameterTexture ret = obj.ptex;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ptex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dissolveWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			float ret = obj.dissolveWidth;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dissolveWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dissolveSoftness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			float ret = obj.dissolveSoftness;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dissolveSoftness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dissolveColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			UnityEngine.Color ret = obj.dissolveColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dissolveColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_duration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			float ret = obj.duration;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index duration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_passRayOnHidden(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			bool ret = obj.passRayOnHidden;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index passRayOnHidden on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_updateMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			UnityEngine.AnimatorUpdateMode ret = obj.updateMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effectFactor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.effectFactor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index effectFactor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_transitionTexture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
			obj.transitionTexture = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index transitionTexture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_keepAspectRatio(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.keepAspectRatio = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index keepAspectRatio on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dissolveWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.dissolveWidth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dissolveWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dissolveSoftness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.dissolveSoftness = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dissolveSoftness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dissolveColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.dissolveColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dissolveColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_duration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.duration = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index duration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_passRayOnHidden(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.passRayOnHidden = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index passRayOnHidden on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_updateMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.UITransitionEffect obj = (Coffee.UIExtensions.UITransitionEffect)o;
			UnityEngine.AnimatorUpdateMode arg0 = (UnityEngine.AnimatorUpdateMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.AnimatorUpdateMode));
			obj.updateMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateMode on a nil value");
		}
	}
}

