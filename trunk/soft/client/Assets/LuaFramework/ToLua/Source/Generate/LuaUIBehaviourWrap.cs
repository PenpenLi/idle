//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaUIBehaviourWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaUIBehaviour), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("OnParam", OnParam);
		L.RegFunction("OnReParam", OnReParam);
		L.RegFunction("AddButtonEvent", AddButtonEvent);
		L.RegFunction("RemoveButtonEvent", RemoveButtonEvent);
		L.RegFunction("RemoveAllBtnEvents", RemoveAllBtnEvents);
		L.RegFunction("AddCustomButtonEvent", AddCustomButtonEvent);
		L.RegFunction("RemoveCustomButtonEvent", RemoveCustomButtonEvent);
		L.RegFunction("AddSliderEvent", AddSliderEvent);
		L.RegFunction("RemoveSliderEvent", RemoveSliderEvent);
		L.RegFunction("RemoveAllSliderEvent", RemoveAllSliderEvent);
		L.RegFunction("AddScrollBarEvent", AddScrollBarEvent);
		L.RegFunction("RemoveScrollBarEvent", RemoveScrollBarEvent);
		L.RegFunction("RemoveAllScrollBarEvents", RemoveAllScrollBarEvents);
		L.RegFunction("AddDropDownEvent", AddDropDownEvent);
		L.RegFunction("RemoveDropDownEvent", RemoveDropDownEvent);
		L.RegFunction("RemoveAllDropDownEvents", RemoveAllDropDownEvents);
		L.RegFunction("AddInputChangedEvent", AddInputChangedEvent);
		L.RegFunction("RemoveInputChangedEvent", RemoveInputChangedEvent);
		L.RegFunction("RemoveAllInputChangedEvents", RemoveAllInputChangedEvents);
		L.RegFunction("AddInputEndEvent", AddInputEndEvent);
		L.RegFunction("RemoveInputEndEvent", RemoveInputEndEvent);
		L.RegFunction("RemoveAllInputEndEvents", RemoveAllInputEndEvents);
		L.RegFunction("AddScrollViewEvent", AddScrollViewEvent);
		L.RegFunction("RemoveScrollViewEvent", RemoveScrollViewEvent);
		L.RegFunction("RemoveAllScrollViewEvents", RemoveAllScrollViewEvents);
		L.RegFunction("RemoveAllEvents", RemoveAllEvents);
		L.RegFunction("AddBeginDragEvent", AddBeginDragEvent);
		L.RegFunction("RemoveDragEvent", RemoveDragEvent);
		L.RegFunction("AddOnDragEvent", AddOnDragEvent);
		L.RegFunction("RemoveOnDragEvent", RemoveOnDragEvent);
		L.RegFunction("AddEndDragEvent", AddEndDragEvent);
		L.RegFunction("RemoveEndDragEvent", RemoveEndDragEvent);
		L.RegFunction("AddClickEvent", AddClickEvent);
		L.RegFunction("RemoveClickEvent", RemoveClickEvent);
		L.RegFunction("AddUpEvent", AddUpEvent);
		L.RegFunction("RemoveUpEvent", RemoveUpEvent);
		L.RegFunction("AddDownEvent", AddDownEvent);
		L.RegFunction("RemoveDownEvent", RemoveDownEvent);
		L.RegFunction("AddEnterEvent", AddEnterEvent);
		L.RegFunction("RemoveEnterEvent", RemoveEnterEvent);
		L.RegFunction("AddExitEvent", AddExitEvent);
		L.RegFunction("RemoveExitEvent", RemoveExitEvent);
		L.RegFunction("AddDrag", AddDrag);
		L.RegFunction("RemoveDrag", RemoveDrag);
		L.RegFunction("AddPress", AddPress);
		L.RegFunction("RemovePress", RemovePress);
		L.RegFunction("AddRectEvent", AddRectEvent);
		L.RegFunction("RemoveClick", RemoveClick);
		L.RegFunction("ClearClick", ClearClick);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnParam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.OnParam(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnReParam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.OnReParam(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddButtonEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				string arg1 = ToLua.CheckString(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				obj.AddButtonEvent(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				string arg1 = ToLua.CheckString(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				LuaTable arg3 = ToLua.CheckLuaTable(L, 5);
				obj.AddButtonEvent(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddButtonEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveButtonEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			string arg1 = ToLua.CheckString(L, 3);
			obj.RemoveButtonEvent(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllBtnEvents(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemoveAllBtnEvents(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddCustomButtonEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				string arg1 = ToLua.CheckString(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				obj.AddCustomButtonEvent(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				string arg1 = ToLua.CheckString(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				LuaTable arg3 = ToLua.CheckLuaTable(L, 5);
				obj.AddCustomButtonEvent(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddCustomButtonEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveCustomButtonEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			string arg1 = ToLua.CheckString(L, 3);
			obj.RemoveCustomButtonEvent(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddSliderEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddSliderEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddSliderEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddSliderEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveSliderEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveSliderEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllSliderEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			obj.RemoveAllSliderEvent();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddScrollBarEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddScrollBarEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddScrollBarEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddScrollBarEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveScrollBarEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveScrollBarEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllScrollBarEvents(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			obj.RemoveAllScrollBarEvents();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddDropDownEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddDropDownEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddDropDownEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddDropDownEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveDropDownEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveDropDownEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllDropDownEvents(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			obj.RemoveAllDropDownEvents();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddInputChangedEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddInputChangedEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddInputChangedEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddInputChangedEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveInputChangedEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveInputChangedEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllInputChangedEvents(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			obj.RemoveAllInputChangedEvents();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddInputEndEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddInputEndEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddInputEndEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddInputEndEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveInputEndEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveInputEndEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllInputEndEvents(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			obj.RemoveAllInputEndEvents();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddScrollViewEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddScrollViewEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddScrollViewEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddScrollViewEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveScrollViewEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveScrollViewEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllScrollViewEvents(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			obj.RemoveAllScrollViewEvents();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllEvents(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			obj.RemoveAllEvents();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddBeginDragEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddBeginDragEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddBeginDragEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddBeginDragEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveDragEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveDragEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnDragEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddOnDragEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddOnDragEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddOnDragEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveOnDragEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveOnDragEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEndDragEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddEndDragEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddEndDragEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddEndDragEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEndDragEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveEndDragEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddClickEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddClickEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddClickEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddClickEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveClickEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveClickEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUpEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddUpEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddUpEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddUpEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUpEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveUpEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddDownEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddDownEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddDownEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddDownEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveDownEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveDownEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEnterEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddEnterEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddEnterEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddEnterEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEnterEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveEnterEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddExitEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddExitEvent(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddExitEvent(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddExitEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveExitEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveExitEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddDrag(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				string arg1 = ToLua.CheckString(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
				obj.AddDrag(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				string arg1 = ToLua.CheckString(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
				LuaTable arg5 = ToLua.CheckLuaTable(L, 7);
				obj.AddDrag(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddDrag");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddPress(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddPress(arg0, arg1);
				return 0;
			}
			else if (count == 8)
			{
				LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
				LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
				LuaFunction arg5 = ToLua.CheckLuaFunction(L, 7);
				LuaTable arg6 = ToLua.CheckLuaTable(L, 8);
				obj.AddPress(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaUIBehaviour.AddPress");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemovePress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemovePress(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddRectEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddRectEvent(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveClick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaUIBehaviour obj = (LuaUIBehaviour)ToLua.CheckObject<LuaUIBehaviour>(L, 1);
			obj.ClearClick();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

