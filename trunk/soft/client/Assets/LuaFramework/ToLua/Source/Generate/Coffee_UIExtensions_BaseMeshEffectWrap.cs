//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Coffee_UIExtensions_BaseMeshEffectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Coffee.UIExtensions.BaseMeshEffect), typeof(UnityEngine.EventSystems.UIBehaviour));
		L.RegFunction("ModifyMesh", ModifyMesh);
		L.RegFunction("SetVerticesDirty", SetVerticesDirty);
		L.RegFunction("ShowTMProWarning", ShowTMProWarning);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("graphic", get_graphic, null);
		L.RegVar("canvasRenderer", get_canvasRenderer, null);
		L.RegVar("rectTransform", get_rectTransform, null);
		L.RegVar("requiredChannels", get_requiredChannels, null);
		L.RegVar("isTMPro", get_isTMPro, null);
		L.RegVar("material", get_material, set_material);
		L.RegVar("materials", get_materials, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ModifyMesh(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<UnityEngine.Mesh>(L, 2))
			{
				Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)ToLua.CheckObject<Coffee.UIExtensions.BaseMeshEffect>(L, 1);
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 2);
				obj.ModifyMesh(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.UI.VertexHelper>(L, 2))
			{
				Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)ToLua.CheckObject<Coffee.UIExtensions.BaseMeshEffect>(L, 1);
				UnityEngine.UI.VertexHelper arg0 = (UnityEngine.UI.VertexHelper)ToLua.ToObject(L, 2);
				obj.ModifyMesh(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Coffee.UIExtensions.BaseMeshEffect.ModifyMesh");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVerticesDirty(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)ToLua.CheckObject<Coffee.UIExtensions.BaseMeshEffect>(L, 1);
			obj.SetVerticesDirty();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowTMProWarning(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)ToLua.CheckObject<Coffee.UIExtensions.BaseMeshEffect>(L, 1);
			UnityEngine.Shader arg0 = (UnityEngine.Shader)ToLua.CheckObject(L, 2, typeof(UnityEngine.Shader));
			UnityEngine.Shader arg1 = (UnityEngine.Shader)ToLua.CheckObject(L, 3, typeof(UnityEngine.Shader));
			UnityEngine.Shader arg2 = (UnityEngine.Shader)ToLua.CheckObject(L, 4, typeof(UnityEngine.Shader));
			System.Action<UnityEngine.Material> arg3 = (System.Action<UnityEngine.Material>)ToLua.CheckDelegate<System.Action<UnityEngine.Material>>(L, 5);
			obj.ShowTMProWarning(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_graphic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)o;
			UnityEngine.UI.Graphic ret = obj.graphic;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index graphic on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canvasRenderer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)o;
			UnityEngine.CanvasRenderer ret = obj.canvasRenderer;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canvasRenderer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rectTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)o;
			UnityEngine.RectTransform ret = obj.rectTransform;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rectTransform on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_requiredChannels(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)o;
			UnityEngine.AdditionalCanvasShaderChannels ret = obj.requiredChannels;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index requiredChannels on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isTMPro(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)o;
			bool ret = obj.isTMPro;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isTMPro on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_material(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)o;
			UnityEngine.Material ret = obj.material;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index material on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_materials(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)o;
			UnityEngine.Material[] ret = obj.materials;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index materials on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_material(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Coffee.UIExtensions.BaseMeshEffect obj = (Coffee.UIExtensions.BaseMeshEffect)o;
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.material = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index material on a nil value");
		}
	}
}

